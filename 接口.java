什么叫接口？

如果抽象类中的方法全部都是抽象的，这时候我们就可以把它表现为另外一种形式，接口（真实原因并不是这样，只是为了比较形象的从抽象类过度到接口的概念）

接口：初期理解，可以认为是一个特殊的抽象类。
接口的关键字是interface
class用于定义类，interface用于定义接口
class a{
  //定义了一个名称为a的类
}
interface a{
  //定义了一个名称为a的接口
}

接口定义时，格式特点：
1，接口中常见定义：常量，抽象方法。
2，接口中的成员都有固定修饰符。（若忘记写，则编译器会自动加上）
   常量：public static final
   方法：public abstract

记住：接口中的成员都是public的。

接口不是用子类来继承的，而是implements关键字（实现）出来的
class b implements a{
  //实现了一个a接口
}

接口：是不可以创建对象的，因为接口有抽象方法。
      需要被子类实现，子类对接口中的抽象方法全都覆盖后，子类才可以实例化。
      否则子类是一个抽象类。

接口可以被类多实现，也是对多继承不支持的转换形式，java支持多实现。

类和类之间是继承关系，类和接口之间是实现关系，接口和接口之间是继承关系，接口之间存在多继承。

问：java支持不支持多继承？
答：支持!但是只有在接口和接口之间才支持多继承。

接口的特点：

	接口是对外暴露的规则。
	接口是程序的扩展功能。
	接口可以用来多实现。
	类与接口之间是实现关系，而且类可以继承一个类的同时实现多个接口。
	接口与接口之间可以有继承关系。

接口具体实例体现：

class Student{
	abstract void study();
	void sleep(){
		System.out.println("sleep");
	}

}
/*
 *将抽烟这一方法定义为接口，因为学生当中可能会有女学生，她们不抽烟，
 如果定义的一个学生需要抽烟的话，再继承学生类的情况下再实现抽烟这个功能就行了。
 * */
interface Smoking{
	void smoke();
}
/*
 *定义需要抽烟的学生类，张三
 *在继承学生类的基础上，再加上实现抽烟接口(扩展了抽烟功能)
 *
 *总结：由此可以看出，接口的最主要作用就是用来扩展功能的。
 *
 * */
class Zhangsan extends Student implements Smoking{
	void study(){}
	public void smoke(){}
}

class Main{
	public static void main(String[] args){
		
	}
}

